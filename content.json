{"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Advent of Code 2019 Day 1","text":"從同事那邊得知了這個到聖誕節一天會公開一道題目的活動，雖然到現在我也只寫到第六題，也不曉得能不能慢慢補進度寫完，但總之既然寫了就得留下點什麼，所以記錄在這裡。 題目：Advent of Code 2019 Day 1 使用語言：C# 第一天的Part1題目相當單純，就只是把一串數字陣列丟進公式計算並取總和。 Part2則是一個數字重複公式遞迴計算，雖然直覺用了遞迴，但果然平常沒在用就是不熟練，稍微小卡了一下。 最後的答案附在底下，因為題目很單純所以就沒有特別把Part1和Part2分開紀錄。 1234567891011121314151617181920212223242526272829303132333435363738using System;using System.Collections.Generic;using System.Linq; public class Program&#123; public static void Main() &#123; // Puzzle Input List&lt;int&gt; input = new List&lt;int&gt;() &#123; 125050,115884,132344,67441,119823,86204,111093,99489,67860,51288,62815,65263, 56540,81380,96101,116351,56330,123123,133969,115050,137851,136900,71254,53458, 139976,140218,117085,52241,71251,136110,103784,132893,140216,85568,94327,85200, 136753,110917,147197,120161,81684,56987,143452,94728,138355,54577,59898,69123,133769, 118418,93530,50297,71543,113383,135203,140129,70977,58566,129593,137456,130100,130915, 88872,96014,62746,127048,89522,62021,85363,143611,135995,65836,146022,119911,127381,121007, 71577,129637,90271,54640,117213,116151,114022,107683,102079,94388,135676,69019,104056,124799, 107998,148696,122793,135417,52981,122890,142491,88137,57609,54921 &#125;; var ans = input.Select(x=&gt;CalculateFuel(x)).Sum(); Console.WriteLine(ans); &#125; private static int CalculateFuel(int fuel) &#123; int result = (fuel / 3) - 2; if(result &lt; 1) return 0; result += CalculateFuel(result); return result; &#125;&#125;","link":"/2019/12/18/Advent-of-Code-2019-Day-1/"},{"title":".NET Core 學習筆記（1）","text":"前陣子參加了兩天保哥的.NET Core開發實戰課程，雖說曾經自己稍微靠Google玩過一陣子.NET Core，但畢竟那都是零碎的知識，能有位老師仔細講解架構還是比較能完整的學習。 這兩天的課程真的讓我學到很多，尤其在最後保哥的經驗分享與討論軟體架構的部分讓我非常有收穫。軟體架構類的知識一直都是很難單純靠網路上Google就能學到的東西，我之前也因此被面試官電過……除非工作環境在這塊已經相當成熟有很多範例可以研究外，在網路上除了多看開源專案以外似乎沒有什麼管道能夠有系統的學習，所以保哥在課堂上的討論對我來說真的是非常有幫助。 上完課之後短時間內大概還沒有機會實際運用.NET Core，所以決定把上課實作的過程筆記下來，未來真的有機會要用的時候才有回憶依據。 以下內容為純筆記性質，不會有太多解說。 dotnet CLI 建立與發佈專案 &amp; 方案 dotnet new -l 列出可使用的範本 e.g. mvc、webapp、console等 dotnet new console 建立主控台專案 dotnet new classlib 建立類別庫專案 dotnet new mstest -n classlib1.test dotnet new sln 建立方案 &amp; 新增專案進方案 （但這個檔案基本上只有VS用） dotnet build 建置專案 dotnet clean 清除專案 dotnet run 建置並執行 dotnet publish 發佈 以上指令後面接方案檔即可針對整個方案執行 可以直接用dotnet指令執行dll檔 dotnet msbuild /p:Configuration=Release 使用MSBuild建置 dotnet test -t 列出可用的測試 dotnet test 執行測試 dotnet vstest 執行dll測試 dotnet add/remove/list reference {專案} 新增{專案}進參考/移除{專案}參考/列出所有參考 dotnet add/remove/list package {Nuget套件} 安裝{Nuget套件}/移除 {Nuget套件}/列出所有Nuget套件 部署參考官方文件： https://docs.microsoft.com/zh-tw/dotnet/core/deploying/deploy-with-cli 部署類型預設為FDD Framework 相依部署（FDD） 目標系統需安裝.NET Core Runtime Framework 相依可執行檔（FDE） .NET Core 2.2開始支援 目標系統需安裝.NET Core Runtiime 會直接部署目標平台的可執行檔，不須透過dotnet執行 自封式部署（SCD） 目標系統不須事先安裝任何共用元件 部署檔案相當大，包含.NET Core程式庫和Runtime的所有元件皆會部署，並無法與其他.NET Core應用程式共用 dotnet publish -c Release -r win10-x64 –self-contained true 設定使用SCD部屬 dotnet publish -c Release -r win10-x64 –self-contained false 不使用SCD部署 win10-x64為RID，可用dotnet –info查詢本機RID或查表 https://docs.microsoft.com/zh-tw/dotnet/core/rid-catalog dotnet publish -c Release /p:PublishDir=C:\\Work\\RD\\IIS 設定publish目標資料夾","link":"/2019/09/21/NET-Core-學習筆記-1/"},{"title":"Advent-of-Code-2019-Day-2","text":"題目：Advent of Code 2019 Day 2 使用語言：C# 第二天的題目是IntcodeProgram，簡單來說就是輸入一個數字會執行指定行為，題目設計有難度越來越高的趨勢，所以還不算很難，而且這次寫的IntcodeProgram後面還會再繼續發展，老實說有點後悔偷懶沒有好好寫，後面在加功能的時候就寫得有點痛苦。 Part1是給一串指令數字和指定input算出最後結果，Part2則是給定最後結果和input範圍要算出input，都還不算太難。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162using System; public class Program&#123; public static void Main() &#123; int result = 0; int targetValue = 19690720; int noun = 0; int verb = 0; for(noun = 0;noun&lt; 100;noun++) &#123; for(verb = 0;verb &lt; 100;verb++) &#123; result = IntcodeProgram(noun, verb, 1); if(result.Equals(targetValue)) break; result = IntcodeProgram(noun, verb, 2); if(result.Equals(targetValue)) break; &#125; if(result.Equals(targetValue)) break; &#125; Console.WriteLine(100 * noun + verb); &#125; public static int IntcodeProgram(int noun, int verb, int firstOpCode) &#123; var inputArray = new int[] &#123;firstOpCode,noun,verb,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,2,9,19,23,1,9,23, 27,2,27,9,31,1,31,5,35,2,35,9,39,1,39,10,43,2,43,13,47,1,47, 6,51,2,51,10,55,1,9,55,59,2,6,59,63,1,63,6,67,1,67,10,71,1, 71,10,75,2,9,75,79,1,5,79,83,2,9,83,87,1,87,9,91,2,91,13,95, 1,95,9,99,1,99,6,103,2,103,6,107,1,107,5,111,1,13,111,115, 2,115,6,119,1,119,5,123,1,2,123,127,1,6,127,0,99,2,14,0,0&#125;; // Example input // var inputArray = new int[] &#123;1,9,10,3,2,3,11,0,99,30,40,50&#125;; for(int i = 0; i &lt; inputArray.Length - 3;i += 4) &#123; var opCode = inputArray[i]; if(opCode.Equals(99) || (!opCode.Equals(1) &amp;&amp; !opCode.Equals(2))) break; var firstValuePosition = inputArray[i+1]; var secondValuePosition = inputArray[i+2]; var outputPosition = inputArray[i+3]; int outputValue = 0; if(opCode.Equals(1)) outputValue = inputArray[firstValuePosition] + inputArray[secondValuePosition]; else outputValue = inputArray[firstValuePosition] * inputArray[secondValuePosition]; inputArray[outputPosition] = outputValue; &#125; return inputArray[0]; &#125;&#125;","link":"/2019/12/18/Advent-of-Code-2019-Day-2/"},{"title":"初見","text":"初見Hexo 其實我一直以來對前端或是自己架站都沒有太多興趣，總是嫌麻煩，這次從朋友那邊得知Hexo可以直接在github上建立簡易的blog，而且找了些教學介紹文覺得應該還蠻容易的，又正好最近覺得應該要找地方紀錄一下技術相關筆記，於是就用了一個周末下午的時間試著架起來，發現其實還蠻好玩的，即使對前端或是Node.js一竅不通也能簡單架設，那就決定來用用看吧！ 除了技術筆記以外，這裡可能也會拿來分享一些工作上的心得。尤其近期工作上有比較大的轉變，環境上的差異讓我想了很多，就也會一併做紀錄。 閒聊 老實說，大概在半年前，我連什麼是Markdown語法都不知道。剛出社會時的工作環境並不需要一直學習新技術，最重要的是「達成需求」，所以會花很多時間在了解客戶的業務需求，並協助客戶分析。 工作期間我一直在思考，這樣就好了嗎？就這樣與新技術持續脫節下去好嗎？不會覺得可惜嗎？於是我等到一個契機，毅然轉職。 轉職後，進入和以前完全不同的環境，以前是求穩、更求正確，現在給我的感覺則是一味求快。身邊接觸的人也和以前不同，聽到了很多很多摒棄舊技術的言論，覺得現在就是應該要全面擁抱新技術，甚至完全不想了解為什麼舊技術能夠存活幾十年。 這些對我來講都是很大的衝擊。 即使我最後選擇了轉職，我也從來沒有後悔過我出社會的第一份工作在一個相對不追求新技術的公司。 世界上沒有任何一件事情是沒有值得學習的地方。 我想要繼續抱持著這份思想繼續在技術這條路上走下去。","link":"/2019/08/10/初見Hexo/"},{"title":"Advent-of-Code-2019-Day-3","text":"題目：Advent of Code 2019 Day 3 使用語言：C# 第三天的題目稍微複雜一些，要將字串轉為行進方向，在座標上形成線，input為兩條線，Part1目標是得出這兩條線的曼哈頓距離。 首先光是為了理解曼哈頓距離就花了不少時間。這時候就覺得自己的英文閱讀能力有夠差…… 這邊本來是想要利用斜率求交點，但因為斜率太久沒用早已忘光，再加上得到交點後還必須要確認點是不是有在指定的線段上，雖說Google研究後覺得理論上看起來應該是不難寫，但我實在是已經拖太久了，最後還是尋求了簡單暴力。 然後程式似乎沒有保留到Part2的部分……這段程式看起來只有算曼哈頓距離，然後Part2寫一半的感覺。 但總之還是先記錄著。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135using System;using System.Collections.Generic;using System.Linq; public class Program&#123; public static void Main() &#123; var firstWire = new string[] &#123;&quot;R990&quot;,&quot;U944&quot;,&quot;L921&quot;,&quot;U993&quot;,&quot;L64&quot;,&quot;U29&quot;,&quot;R899&quot;,&quot;D406&quot;,&quot;R841&quot;,&quot;U716&quot;,&quot;L32&quot;,&quot;U658&quot;,&quot;L830&quot;,&quot;D481&quot;,&quot;L441&quot;,&quot;U491&quot;, &quot;L687&quot;,&quot;D847&quot;,&quot;L459&quot;,&quot;U920&quot;,&quot;R165&quot;,&quot;U224&quot;,&quot;L896&quot;,&quot;D868&quot;,&quot;L191&quot;,&quot;U877&quot;,&quot;L909&quot;,&quot;U467&quot;,&quot;R798&quot;,&quot;U132&quot;,&quot;R234&quot;,&quot;U49&quot;,&quot;R484&quot;,&quot;U911&quot;,&quot;R108&quot;,&quot;D308&quot;, &quot;R867&quot;,&quot;U350&quot;,&quot;L404&quot;,&quot;U107&quot;,&quot;L84&quot;,&quot;U668&quot;,&quot;R850&quot;,&quot;U470&quot;,&quot;L182&quot;,&quot;U93&quot;,&quot;R284&quot;,&quot;U999&quot;,&quot;L664&quot;,&quot;U110&quot;,&quot;R650&quot;,&quot;D189&quot;,&quot;R540&quot;,&quot;D112&quot;,&quot;R794&quot;,&quot;U999&quot;, &quot;R871&quot;,&quot;D829&quot;,&quot;L549&quot;,&quot;U988&quot;,&quot;R654&quot;,&quot;D411&quot;,&quot;R323&quot;,&quot;D774&quot;,&quot;R529&quot;,&quot;U275&quot;,&quot;L909&quot;,&quot;U936&quot;,&quot;R122&quot;,&quot;D922&quot;,&quot;L331&quot;,&quot;U813&quot;,&quot;L748&quot;,&quot;U770&quot;,&quot;R511&quot;,&quot;D892&quot;, &quot;L770&quot;,&quot;U318&quot;,&quot;R661&quot;,&quot;U823&quot;,&quot;R210&quot;,&quot;D393&quot;,&quot;L694&quot;,&quot;U929&quot;,&quot;L76&quot;,&quot;D619&quot;,&quot;R395&quot;,&quot;U651&quot;,&quot;R526&quot;,&quot;U145&quot;,&quot;R851&quot;,&quot;U112&quot;,&quot;R73&quot;,&quot;D89&quot;,&quot;R17&quot;,&quot;U929&quot;,&quot;R807&quot;, &quot;U87&quot;,&quot;R764&quot;,&quot;D158&quot;,&quot;L820&quot;,&quot;U803&quot;,&quot;L785&quot;,&quot;D205&quot;,&quot;L828&quot;,&quot;D271&quot;,&quot;L839&quot;,&quot;D482&quot;,&quot;L797&quot;,&quot;U338&quot;,&quot;R322&quot;,&quot;D633&quot;,&quot;L292&quot;,&quot;U16&quot;,&quot;R627&quot;,&quot;U19&quot;,&quot;R548&quot;,&quot;U516&quot;, &quot;L384&quot;,&quot;U83&quot;,&quot;R256&quot;,&quot;U937&quot;,&quot;R404&quot;,&quot;U322&quot;,&quot;R671&quot;,&quot;D543&quot;,&quot;L412&quot;,&quot;U446&quot;,&quot;R238&quot;,&quot;U246&quot;,&quot;L794&quot;,&quot;D750&quot;,&quot;L34&quot;,&quot;U317&quot;,&quot;L994&quot;,&quot;U874&quot;,&quot;L247&quot;,&quot;D20&quot;,&quot;R491&quot;, &quot;U834&quot;,&quot;L498&quot;,&quot;D987&quot;,&quot;R2&quot;,&quot;U175&quot;,&quot;R452&quot;,&quot;U168&quot;,&quot;R495&quot;,&quot;D183&quot;,&quot;R201&quot;,&quot;U532&quot;,&quot;L192&quot;,&quot;U984&quot;,&quot;L566&quot;,&quot;D471&quot;,&quot;L704&quot;,&quot;D2&quot;,&quot;L776&quot;,&quot;U5&quot;,&quot;R911&quot;,&quot;U308&quot;, &quot;R763&quot;,&quot;D555&quot;,&quot;R458&quot;,&quot;D439&quot;,&quot;L968&quot;,&quot;D78&quot;,&quot;R549&quot;,&quot;D583&quot;,&quot;R289&quot;,&quot;D355&quot;,&quot;L503&quot;,&quot;D871&quot;,&quot;L881&quot;,&quot;U516&quot;,&quot;L507&quot;,&quot;D551&quot;,&quot;R711&quot;,&quot;U702&quot;,&quot;L308&quot;,&quot;D905&quot;, &quot;L408&quot;,&quot;U932&quot;,&quot;L884&quot;,&quot;U218&quot;,&quot;L158&quot;,&quot;D562&quot;,&quot;L200&quot;,&quot;D114&quot;,&quot;R673&quot;,&quot;U448&quot;,&quot;R887&quot;,&quot;U181&quot;,&quot;R247&quot;,&quot;U329&quot;,&quot;L965&quot;,&quot;U495&quot;,&quot;L329&quot;,&quot;D162&quot;,&quot;L265&quot;,&quot;D389&quot;, &quot;R419&quot;,&quot;U435&quot;,&quot;R258&quot;,&quot;U146&quot;,&quot;R208&quot;,&quot;D184&quot;,&quot;R730&quot;,&quot;D19&quot;,&quot;L78&quot;,&quot;D886&quot;,&quot;R472&quot;,&quot;D350&quot;,&quot;R484&quot;,&quot;U392&quot;,&quot;L542&quot;,&quot;U601&quot;,&quot;L202&quot;,&quot;U974&quot;,&quot;L310&quot;,&quot;U52&quot;,&quot;L537&quot;, &quot;U597&quot;,&quot;L163&quot;,&quot;D655&quot;,&quot;R928&quot;,&quot;U269&quot;,&quot;L926&quot;,&quot;D790&quot;,&quot;L513&quot;,&quot;U441&quot;,&quot;L90&quot;,&quot;U581&quot;,&quot;L211&quot;,&quot;U871&quot;,&quot;R603&quot;,&quot;D130&quot;,&quot;L220&quot;,&quot;U459&quot;,&quot;L933&quot;,&quot;U648&quot;,&quot;R721&quot;, &quot;U642&quot;,&quot;R301&quot;,&quot;U537&quot;,&quot;L858&quot;,&quot;D777&quot;,&quot;R823&quot;,&quot;U14&quot;,&quot;R820&quot;,&quot;D218&quot;,&quot;L96&quot;,&quot;D318&quot;,&quot;L206&quot;,&quot;U280&quot;,&quot;R887&quot;,&quot;D241&quot;,&quot;L752&quot;,&quot;U828&quot;,&quot;R354&quot;,&quot;U864&quot;,&quot;R844&quot;, &quot;D872&quot;,&quot;L728&quot;,&quot;D298&quot;,&quot;L234&quot;,&quot;U695&quot;,&quot;R434&quot;,&quot;D94&quot;,&quot;R905&quot;,&quot;D592&quot;,&quot;L32&quot;,&quot;D860&quot;,&quot;R680&quot;,&quot;D197&quot;,&quot;R886&quot;,&quot;U760&quot;,&quot;L232&quot;,&quot;U916&quot;,&quot;L452&quot;,&quot;U248&quot;,&quot;R715&quot;, &quot;D773&quot;,&quot;R867&quot;,&quot;U77&quot;,&quot;R751&quot;,&quot;D36&quot;,&quot;R565&quot;,&quot;U897&quot;,&quot;R782&quot;,&quot;U931&quot;,&quot;R546&quot;,&quot;U261&quot;,&quot;R920&quot;,&quot;D296&quot;,&quot;R451&quot;,&quot;U258&quot;,&quot;L394&quot;,&quot;U965&quot;,&quot;R912&quot;,&quot;D593&quot;,&quot;L990&quot;&#125;; var secondWire = new string[] &#123;&quot;L994&quot;,&quot;U515&quot;,&quot;R163&quot;,&quot;U863&quot;,&quot;L343&quot;,&quot;U162&quot;,&quot;L875&quot;,&quot;D92&quot;,&quot;L483&quot;,&quot;D601&quot;,&quot;R79&quot;,&quot;D761&quot;,&quot;L389&quot;,&quot;U167&quot;,&quot;L145&quot;,&quot;U145&quot;, &quot;L247&quot;,&quot;U886&quot;,&quot;R61&quot;,&quot;U820&quot;,&quot;L584&quot;,&quot;D239&quot;,&quot;R402&quot;,&quot;U805&quot;,&quot;R956&quot;,&quot;U126&quot;,&quot;R615&quot;,&quot;D322&quot;,&quot;R431&quot;,&quot;D460&quot;,&quot;R397&quot;,&quot;D511&quot;,&quot;R805&quot;,&quot;D177&quot;,&quot;L778&quot;,&quot;U296&quot;, &quot;R599&quot;,&quot;U759&quot;,&quot;R40&quot;,&quot;U1&quot;,&quot;L422&quot;,&quot;U751&quot;,&quot;R94&quot;,&quot;U401&quot;,&quot;R504&quot;,&quot;U940&quot;,&quot;L564&quot;,&quot;U24&quot;,&quot;R595&quot;,&quot;U944&quot;,&quot;R815&quot;,&quot;U672&quot;,&quot;R787&quot;,&quot;D854&quot;,&quot;R579&quot;,&quot;D604&quot;,&quot;L62&quot;, &quot;U670&quot;,&quot;L516&quot;,&quot;U199&quot;,&quot;L639&quot;,&quot;D919&quot;,&quot;L485&quot;,&quot;U655&quot;,&quot;R391&quot;,&quot;U669&quot;,&quot;R772&quot;,&quot;D34&quot;,&quot;R868&quot;,&quot;D12&quot;,&quot;L108&quot;,&quot;U295&quot;,&quot;R701&quot;,&quot;D603&quot;,&quot;R493&quot;,&quot;U927&quot;,&quot;R29&quot;,&quot;D34&quot;, &quot;R499&quot;,&quot;U111&quot;,&quot;L87&quot;,&quot;U190&quot;,&quot;R884&quot;,&quot;D658&quot;,&quot;R474&quot;,&quot;D166&quot;,&quot;R921&quot;,&quot;U698&quot;,&quot;R592&quot;,&quot;U25&quot;,&quot;R710&quot;,&quot;D398&quot;,&quot;L26&quot;,&quot;U696&quot;,&quot;L432&quot;,&quot;D887&quot;,&quot;R469&quot;,&quot;U656&quot;,&quot;L428&quot;, &quot;D188&quot;,&quot;L543&quot;,&quot;D150&quot;,&quot;R160&quot;,&quot;U543&quot;,&quot;R743&quot;,&quot;U692&quot;,&quot;R618&quot;,&quot;D148&quot;,&quot;R956&quot;,&quot;U753&quot;,&quot;L175&quot;,&quot;D789&quot;,&quot;R897&quot;,&quot;U305&quot;,&quot;L137&quot;,&quot;D914&quot;,&quot;R330&quot;,&quot;D780&quot;,&quot;R744&quot;, &quot;D473&quot;,&quot;L754&quot;,&quot;U482&quot;,&quot;L975&quot;,&quot;D413&quot;,&quot;L698&quot;,&quot;U656&quot;,&quot;L177&quot;,&quot;U419&quot;,&quot;R13&quot;,&quot;D827&quot;,&quot;L67&quot;,&quot;D800&quot;,&quot;R369&quot;,&quot;U97&quot;,&quot;L34&quot;,&quot;D588&quot;,&quot;L41&quot;,&quot;D760&quot;,&quot;L164&quot;,&quot;U224&quot;, &quot;L921&quot;,&quot;D311&quot;,&quot;R489&quot;,&quot;U956&quot;,&quot;R277&quot;,&quot;U180&quot;,&quot;R724&quot;,&quot;U748&quot;,&quot;R785&quot;,&quot;U826&quot;,&quot;L426&quot;,&quot;D957&quot;,&quot;R303&quot;,&quot;U16&quot;,&quot;L729&quot;,&quot;U224&quot;,&quot;L712&quot;,&quot;U43&quot;,&quot;L280&quot;,&quot;D648&quot;, &quot;R987&quot;,&quot;D941&quot;,&quot;R154&quot;,&quot;D581&quot;,&quot;R876&quot;,&quot;U615&quot;,&quot;L480&quot;,&quot;D103&quot;,&quot;R636&quot;,&quot;D276&quot;,&quot;R948&quot;,&quot;U89&quot;,&quot;R434&quot;,&quot;D212&quot;,&quot;R837&quot;,&quot;D295&quot;,&quot;R532&quot;,&quot;D390&quot;,&quot;R374&quot;,&quot;D926&quot;, &quot;R911&quot;,&quot;D110&quot;,&quot;R258&quot;,&quot;U83&quot;,&quot;L955&quot;,&quot;U747&quot;,&quot;L925&quot;,&quot;D366&quot;,&quot;R571&quot;,&quot;U241&quot;,&quot;R628&quot;,&quot;D344&quot;,&quot;R919&quot;,&quot;U117&quot;,&quot;R337&quot;,&quot;D683&quot;,&quot;L720&quot;,&quot;U261&quot;,&quot;L124&quot;,&quot;D545&quot;, &quot;R979&quot;,&quot;D601&quot;,&quot;L906&quot;,&quot;D324&quot;,&quot;R441&quot;,&quot;U678&quot;,&quot;L978&quot;,&quot;U744&quot;,&quot;L472&quot;,&quot;D217&quot;,&quot;R799&quot;,&quot;U740&quot;,&quot;L77&quot;,&quot;U964&quot;,&quot;L278&quot;,&quot;U497&quot;,&quot;R441&quot;,&quot;U21&quot;,&quot;L37&quot;,&quot;U319&quot;,&quot;L24&quot;, &quot;D211&quot;,&quot;L44&quot;,&quot;U459&quot;,&quot;R35&quot;,&quot;D609&quot;,&quot;R900&quot;,&quot;D538&quot;,&quot;R397&quot;,&quot;D776&quot;,&quot;R629&quot;,&quot;D860&quot;,&quot;R519&quot;,&quot;D340&quot;,&quot;R168&quot;,&quot;U603&quot;,&quot;R46&quot;,&quot;U889&quot;,&quot;R897&quot;,&quot;D442&quot;,&quot;R997&quot;,&quot;U705&quot;, &quot;L82&quot;,&quot;D963&quot;,&quot;R941&quot;,&quot;U701&quot;,&quot;L347&quot;,&quot;D824&quot;,&quot;R269&quot;,&quot;U891&quot;,&quot;L569&quot;,&quot;D558&quot;,&quot;L867&quot;,&quot;U145&quot;,&quot;R121&quot;,&quot;D369&quot;,&quot;R542&quot;,&quot;U227&quot;,&quot;L198&quot;,&quot;U863&quot;,&quot;L755&quot;,&quot;U273&quot;, &quot;L734&quot;,&quot;D233&quot;,&quot;R578&quot;,&quot;U67&quot;,&quot;L821&quot;,&quot;U600&quot;,&quot;L203&quot;,&quot;D234&quot;,&quot;R695&quot;,&quot;U819&quot;,&quot;L639&quot;,&quot;D700&quot;,&quot;R295&quot;,&quot;D129&quot;,&quot;L612&quot;,&quot;U157&quot;,&quot;R212&quot;,&quot;U536&quot;,&quot;L968&quot;,&quot;U562&quot;, &quot;L999&quot;,&quot;D391&quot;,&quot;L231&quot;,&quot;U262&quot;,&quot;R334&quot;,&quot;D967&quot;,&quot;R463&quot;,&quot;U748&quot;,&quot;R842&quot;,&quot;D500&quot;,&quot;R860&quot;,&quot;U856&quot;,&quot;R263&quot;,&quot;D633&quot;,&quot;R460&quot;,&quot;D337&quot;,&quot;L880&quot;,&quot;U146&quot;,&quot;R910&quot;&#125;; // Example //var firstWire = new string[] &#123;&quot;R75&quot;,&quot;D30&quot;,&quot;R83&quot;,&quot;U83&quot;,&quot;L12&quot;,&quot;D49&quot;,&quot;R71&quot;,&quot;U7&quot;,&quot;L72&quot;&#125;; //var secondWire = new string[] &#123;&quot;U62&quot;,&quot;R66&quot;,&quot;U55&quot;,&quot;R34&quot;,&quot;D71&quot;,&quot;R55&quot;,&quot;D58&quot;,&quot;R83&quot;&#125;; var firstRoute = GetRoute(firstWire); var secondRoute = GetRoute(secondWire); var result = 0; var targetPoint = new Coordinate(); var crossPoint = firstRoute.Join(secondRoute, f =&gt; new &#123;f.x, f.y&#125;, s =&gt; new &#123;s.x, s.y&#125;, (f, s) =&gt; f) .Where(r=&gt;!r.x.Equals(0) &amp;&amp; !r.y.Equals(0)).ToList(); foreach(var point in crossPoint) &#123; var Manhattandistance = Math.Abs(point.x) + Math.Abs(point.y); if(result.Equals(0) || result &gt; Manhattandistance) &#123; targetPoint = point; result = Manhattandistance; &#125; &#125; firstRoute = firstRoute.Where(x=&gt;x.step&lt;targetPoint.step).ToList(); firstRoute.Add(targetPoint); secondRoute = secondRoute.Where(x=&gt;x.step&lt;targetPoint.step).ToList(); secondRoute.Add(targetPoint); var firstRouteDistance = GetTargetDistance(firstRoute, targetPoint.step); var secondRouteDistance = GetTargetDistance(secondRoute, targetPoint.step); Console.WriteLine(result); Console.WriteLine(firstRouteDistance+secondRouteDistance); &#125; public class Coordinate &#123; public int x &#123;get;set;&#125; public int y &#123;get;set;&#125; public int step &#123;get;set;&#125; public bool isDest &#123;get;set;&#125; &#125; public static List&lt;Coordinate&gt; GetRoute(string[] routeMap) &#123; var result = new List&lt;Coordinate&gt;(); var position = new Coordinate() &#123;x=0, y=0, step=0, isDest=true&#125;; for(int i = 0; i&lt; routeMap.Length;i++) &#123; var data = CalculateCoordinate(position, routeMap[i]); position = data.position; result.AddRange(data.route); &#125; return result; &#125; public static int GetTargetDistance(List&lt;Coordinate&gt; source, int step) &#123; var distance = 0; for(int i = 0;i &lt; step;i++) &#123; //Console.WriteLine(GetDistance(source[i], source[i+1])); distance += GetDistance(source[i], source[i+1]); &#125; return distance; &#125; public static int GetDistance(Coordinate startPoint, Coordinate endPoint) &#123; return Math.Abs(startPoint.x - endPoint.x) + Math.Abs(startPoint.y - endPoint.y); &#125; public static (Coordinate position, List&lt;Coordinate&gt; route) CalculateCoordinate(Coordinate position, string move) &#123; var result = position; var vector = move.Substring(0, 1); var distance = Convert.ToInt32(move.Substring(1)); var route = new List&lt;Coordinate&gt;(); result.step += 1; result.isDest = true; switch(vector) &#123; case &quot;R&quot;: route.AddRange(GetRoutePoints(result.x, result.x + distance, result.y, vector, result.step)); result.x += distance; break; case &quot;L&quot;: route.AddRange(GetRoutePoints(result.x - distance, result.x, result.y, vector, result.step)); result.x -= distance; break; case &quot;U&quot;: route.AddRange(GetRoutePoints(result.y, result.y + distance, result.x, vector, result.step)); result.y += distance; break; case &quot;D&quot;: route.AddRange(GetRoutePoints(result.y - distance, result.y, result.x, vector, result.step)); result.y -= distance; break; &#125; route.Add(result); return (result, route); &#125; public static List&lt;Coordinate&gt; GetRoutePoints(int start, int end, int fixPoint, string direction, int step) &#123; var result = new List&lt;Coordinate&gt;(); for(int i = start;i&lt;end;i++) &#123; if(direction.Equals(&quot;R&quot;) ||direction.Equals(&quot;L&quot;)) result.Add(new Coordinate() &#123;x=i, y=fixPoint, step = step, isDest=false&#125;); if(direction.Equals(&quot;U&quot;) ||direction.Equals(&quot;D&quot;)) result.Add(new Coordinate() &#123;x=fixPoint, y=i, step = step, isDest=false&#125;); &#125; return result; &#125;&#125;","link":"/2019/12/18/Advent-of-Code-2019-Day-3/"}],"tags":[{"name":"Advent of Code 2019","slug":"Advent-of-Code-2019","link":"/tags/Advent-of-Code-2019/"},{"name":"Advent of Code","slug":"Advent-of-Code","link":"/tags/Advent-of-Code/"},{"name":"C#","slug":"C","link":"/tags/C/"},{"name":".NET Core","slug":"NET-Core","link":"/tags/NET-Core/"},{"name":"Console","slug":"Console","link":"/tags/Console/"},{"name":"Note","slug":"Note","link":"/tags/Note/"},{"name":"Newbie","slug":"Newbie","link":"/tags/Newbie/"},{"name":"Essay","slug":"Essay","link":"/tags/Essay/"},{"name":"Thoughts","slug":"Thoughts","link":"/tags/Thoughts/"}],"categories":[{"name":"Advent of Code 2019","slug":"Advent-of-Code-2019","link":"/categories/Advent-of-Code-2019/"},{"name":".NET Core","slug":"NET-Core","link":"/categories/NET-Core/"},{"name":"Essay","slug":"Essay","link":"/categories/Essay/"}]}